<div class="my-5">
    <h1 class="text-center">댓글관리</h1>
    <form name="frm">
        <textarea name="contents" rows = "5" class="form-control" placeholder="내용을 입력하세요."></textarea>
        <div class="text-end mt-2">
            <button class="btn btn-primary px-5">등록</button>
        </div>
    </form>
    <div id="div_reply"></div>
</div>

<script id="temp_reply" type="x-handlebars-template">
    {{#each .}}
        <div class = "top1">
            <div class = "view{{id}} top2">
                <div style = "font-size:12px; color:gray;">{{email}} | {{date}}</div>
                <div class = "ellipsis2 contents" style = "cursor:pointer; white-space:pre-wrap">{{contents}}</div>
                <div class = "text-end top3" style = "{{funHide email}}">
                    <button class = "btn btn-outline-success btn-sm btn-update" id = "{{id}}">수정</button>
                    <button class = "btn btn-outline-danger btn-sm btn-delete" id="{{id}}">삭제</button>
                </div>
            </div>
            <div class = "edit{{id}} top2" style = "display:none;">
                <textarea class = "form-control txtcontents" rows = 5>{{contents}}</textarea>
                <div class = "text-end mt-2 top3">
                    <button class = "btn btn-outline-success btn-sm btn-save" id = "{{id}}">저장</button>
                    <button class = "btn btn-outline-secondary btn-sm btn-cancel" id="{{id}}">취소</button>
                </div>
            </div>
        </div>
        <hr>
    {{/each}}
</script>

<script>
    // 수정, 삭제 버튼 표시
    Handlebars.registerHelper("funHide", function(writer) {
        if(email != writer) {
            return "display:none;";
        }
    });
</script>

<script type="module">
    import {app} from '/javascripts/config.js'
    import {getFirestore, collection, addDoc, deleteDoc, doc, getDoc, setDoc}  from "https://www.gstatic.com/firebasejs/10.13.2/firebase-firestore.js";
    // 목록 출력
    import {onSnapshot, query, where, orderBy}  from "https://www.gstatic.com/firebasejs/10.13.2/firebase-firestore.js";
    const db = getFirestore(app);

    const bid = "<%=id%>";
    console.log(bid);

    // 댓글 목록
    const q = query(collection(db, "reply"), where("bid","==",bid), orderBy("date", "desc"));
    
    onSnapshot(q, snapshot => {
        // console.log(snapshot);
        const rows = [];
        snapshot.forEach(row => {
            rows.push({id:row.id, ...row.data()});
        });
        // console.log(rows);

        // 댓글 목록 출력
        const temp = Handlebars.compile($("#temp_reply").html());
        $("#div_reply").html(temp(rows));
    });

    // 내용 클릭 시, 2줄 -> 모든 내용
    $("#div_reply").on("click", ".contents", function() {
        // toggleClass : 넣었다(전체 나왔다) 뺐다(두줄 나왔다) 해라
        $(this).toggleClass("ellipsis2");
    })

    // 삭제버튼(btn-delete)을 클릭한 경우
    $("#div_reply").on("click", ".btn-delete", function() {
        const id = $(this).attr("id");
        if(confirm(`${id}번 댓글을 삭제하실래요?`)) {
            // 댓글 삭제
            deleteDoc(doc(db, `reply/${id}`));
        }
    });

    // 수정버튼을 클릭한 경우
    $("#div_reply").on("click", ".btn-update", function() {
        const id = $(this).attr("id");
        $("#div_reply .edit" + id).show();
        $("#div_reply .view" + id).hide();

        // 저장 버튼을 disabled로 해서 클릭 못하게 막음
        $(this).parent().parent().parent().find(".btn-save").attr("disabled", true);
    });

    // 취소버튼을 클릭한 경우
    $("#div_reply").on("click", ".btn-cancel", async function() {
        const id = $(this).attr("id");
        const snapshot = await getDoc(doc(db, `reply/${id}`));
        const reply = snapshot.data();
        $(this).parent().parent().find(".contents").val(reply.contents);
        $("#div_reply .edit" + id).hide();
        $("#div_reply .view" + id).show();
    });

    // 저장버튼을 클릭한 경우
    $("#div_reply").on("click", ".btn-save",async function() {
        const id = $(this).attr("id");

        const snapshot = await getDoc(doc(db, `reply/${id}`));
        const reply = snapshot.data();

        const contents = $(this).parent().parent().find(".txtcontents").val();
        // reply 값을 새로운 contents값으로 변경
        // ... -> 복사하는것
        await setDoc(doc(db, `reply/${id}`), {...reply, contents});

        $("#div_reply .edit" + id).hide();
        $("#div_reply .view" + id).show();

    });

    // 댓글 수정 후 댓글 내용이 변경되었을 경우
    $("#div_reply").on("keyup", ".txtcontents", function() {
        $(this).parent().parent().find(".btn-save").attr("disabled", false);
    });

    

    $(frm).on("submit", async function(e) {
        e.preventDefault();
        if(email) {
            const contents = $(frm.contents).val();
            if(contents =="") {
            // 경고
            alert("내용을 입력하세요");
            $(frm.contents).focus();
        } else {
            // 댓글 저장
            // 날짜 저장
            const date=moment(new Date()).format("YYYY-MM-DD HH:mm:ss");
            // 답변 저장
            const reply = {bid, email, date, contents};
            console.log(reply);

            // 내용 firebase에 저장
            await addDoc(collection(db, "reply"), reply);
            // 내용 삭제
            $(frm.contents).val("");
        }
    } else {
            sessionStorage.setItem("target", window.location.href);
            location.href = "/users/login";
        }
    }
    );
</script>