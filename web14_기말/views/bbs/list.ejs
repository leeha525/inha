<div class="my-5">
    <h1 class="text-center mb-5"><%=title%></h1>
    <div class="text-end mb-2">
        <button id="writer" class="btn btn-primary px-5">글쓰기</button>
    </div>
    <div id="div_bbs"></div>
    <div class="text-center">
        <button id="prev" class="btn btn-primary">이전</button>
        <span id="page" class="mx-3">1/3</span>
        <button id="next" class="btn btn-primary">다음</button>
    </div>
</div>
<script id="temp_bbs" type="x-hadlebars-template">
    <table class="table table-hover table-striped">
        <tr>
            <td>No.</td><td>Title</td><td>Email</td><td>Date</td>
        </tr>    
        {{#each .}}
        <tr>
            <td>{{seq}}</td>
            <td><a href="/bbs/{{id}}">{{title}}</a></td>
            <td>{{email}}</td>
            <td>{{date}}</td>
        </tr>        
        {{/each}}
    </table>
</script>

<script type="module">
    import {app} from '/javascripts/config.js'
    import {getFirestore, collection, query, orderBy, onSnapshot}  from "https://www.gstatic.com/firebasejs/10.13.2/firebase-firestore.js";
    // - getFirestore: Firebase Firestore 데이터베이스를 초기화하고 인스턴스를 가져옴
    // - collection: Firestore에서 특정 컬렉션(데이터 그룹)을 참조하기 위한 함수
    // - query: Firestore에서 데이터를 검색하거나 필터링하기 위한 쿼리 객체를 생성하는 함수
    // - orderBy: 쿼리 결과를 특정 필드 기준으로 정렬하기 위한 함수
    // - onSnapshot: 실시간 데이터 변경을 감지하고, 변경된 데이터를 업데이트하기 위한 함수
    const db = getFirestore(app);

    //게시글목록
    const q = query(collection(db, "bbs"), orderBy("date", "desc"));
    const rows=[];
    onSnapshot(q, snapshot=>{
        let no=1;
        snapshot.forEach(row=>{
            rows.push({no:no++, id:row.id, ...row.data()});
        });
        getList();
    });

    const size=5;
    let page=1;
    function getList(){
        const start = (page-1) * size + 1;
        const end = (page * size);
        let data=[];
        rows.forEach(row=>{
            if(row.no>=start && row.no<=end) data.push({...row, seq:rows.length-row.no + 1});
        });
        const temp=Handlebars.compile($("#temp_bbs").html());
        $("#div_bbs").html(temp(data));

        const last = Math.ceil(rows.length/size);
        $("#page").html(`${page}/${last}`);

        if(page==1) $("#prev").attr("disabled", true);
        else $("#prev").attr("disabled", false);

        if(page==last) $("#next").attr("disabled", true);
        else $("#next").attr("disabled", false);
    }

    //다음버튼을 클릭한 경우
     $("#next").on("click", function(){
        page++;
        getList();
     });

     
    //이전버튼을 클릭한 경우
    $("#prev").on("click", function(){
        page--;
        getList();
     });

    //글쓰기 버튼을 클릭한 경우
    $("#writer").on("click", function(){
        if(email){
            location.href="/bbs/insert";
        }else{
            sessionStorage.setItem("target", "/bbs/insert");
            location.href="/users/login";
        }
    });
</script>